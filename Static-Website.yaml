---
AWSTemplateFormatVersion: "2010-09-09"
Description: Static website with S3 and CI/CD from GitHub

Parameters:
  GitHubOwner:
    Description: Name of GitHub Owner
    Type: String
    Default: respeletaDev

  GitHubRepository:
    Description: Name of GitHub Repo
    Type: String
    Default: website

  GitHubBranch:
    Description: Name of GitHub Repo Branch
    Type: String
    Default: main

  GitHubPersonalAccessToken:
    Type: String
    NoEcho: true
    Default: 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

Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-static-website-moai-001
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      # AccessControl: PublicRead # throws an error: Bucket cannot have public ACLs set with BlockPublicAccess enabled
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  WebsiteBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref WebsiteBucket
                - /*

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: my-website-project
      Description: Builds and deploys the static website
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Source:
        Type: GITHUB
        Location: https://github.com/<GitHubOwner>/<GitHubRepo>.git
        GitCloneDepth: 1
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                nodejs: 14
            build:
              commands:
                - echo "Building the website"
                - npm ci
                - npm run build
            post_build:
              commands:
                - echo "Deploying to S3"
                - aws s3 sync build/ s3://!Ref WebsiteBucket
          artifacts:
            files:
              - '**/*'
            base-directory: build
      Artifacts: # drop the build artifacts of S3 bucket that hosts static website
        Type: S3
        Name: "/" # store the artifact in the root of the output bucket
        Location: !Sub arn:aws:s3:::${WebsiteBucket}
        EncryptionDisabled: True #disable the encryption of artifacts in a build to see html pages

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Resource:
                  - arn:aws:logs:us-east-2::<Account-ID>:log-group:/aws/codebuild/CodeBuildRole
                  - arn:aws:logs:us-east-2::<Account-ID>:log-group:/aws/codebuild/CodeBuildRole:*
                  - "*"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:*
              - Effect: Allow
                Resource:
                  - "arn:aws:s3:::<BuckerName>*"
                  - "arn:aws:s3:::<BuckerName>-*/*"
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
              - Effect: Allow
                Action: ecr:GetAuthorizationToken
                Resource: "*"
              - Effect: Allow
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:BatchPutCodeCoverages
                Resource:
                  - arn:aws:codebuild:us-east-2::<Account-ID>:report-group/CodeBuildRole-*
              - Effect: Allow
                Action: "codebuild:*"
                Resource: "*"
              - Effect: Allow
                Action:
                  - ecs:DescribeServices
                  - ecs:UpdateService
                Resource: "*"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess"

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubRepository
                Repo: !Ref GitHubRepository
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubPersonalAccessToken
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
      ArtifactStores:
        - ArtifactStore:
            Type: S3
            Location: !Ref WebsiteBucket
          Region: !Ref "AWS::Region"

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - codebuild.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Resource:
                  - "arn:aws:logs:us-east-2::<Account-ID>:log-group:/aws/codebuild/CodePipelineRole"
                  - "arn:aws:logs:us-east-2::<Account-ID>:log-group:/aws/codebuild/CodePipelineRole:*"
                  - "*"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
              - Effect: Allow
                Resource:
                  - "arn:aws:s3:::<BuckerName>*"
                  - "arn:aws:s3:::<BuckerName>-*/*"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketAcl"
                  - "s3:GetBucketLocation"
                  - "s3:*"
              - Effect: Allow
                Action:
                  - "ecr:GetAuthorizationToken"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "codebuild:CreateReportGroup"
                  - "codebuild:CreateReport"
                  - "codebuild:UpdateReport"
                  - "codebuild:BatchPutTestCases"
                  - "codebuild:BatchPutCodeCoverages"
                Resource:
                  - "arn:aws:codebuild:us-east-2::<Account-ID>:report-group/CodePipelineRole-*"
              - Effect: Allow
                Action: "codebuild:*"
                Resource: "*"

Outputs:
  WebsiteURL:
    Description: Website URL
    Value: !GetAtt WebsiteBucket.RegionalDomainName
  GitHubRepository:
    Description: GitHub repository URL
    Value: !Ref GitHubRepository
